--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.6) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30)if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v70=v2(v0(v30,16));if v19 then local v76=v5(v70,v19);v19=nil;return v76;else return v70;end end end);local function v20(v31,v32,v33)if v33 then local v71=(v31/((1315 -((1159 -394) + (1920 -(704 + 668))))^(v32-(316 -(50 + 265)))))%((4 -2)^(((v33-(1 + 0)) -(v32-(1 + 0))) + (981 -(544 + 436)))) ;return v71-(v71%(27 -(14 + 12))) ;else local v72=(2 + 0)^(v32-((3377 -(1137 + 488)) -(1460 + 291))) ;return (((v31%(v72 + v72))>=v72) and 1) or (0 -0) ;end end local function v21()local v34=0 -0 ;local v35;while true do if (v34==1) then return v35;end if (v34==0) then v35=v1(v16,v18,v18);v18=v18 + 1 + 0 ;v34=3 -2 ;end end end local function v22()local v36,v37=v1(v16,v18,v18 + 2 );v18=v18 + (1230 -(466 + 762)) ;return (v37 * (553 -297)) + v36 ;end local function v23()local v38,v39,v40,v41=v1(v16,v18,v18 + 3 );v18=v18 + (760 -(440 + 318)) + 2 ;return (v41 * (16777565 -(123 + 226))) + (v40 * (147584 -82048)) + (v39 * (244 + 12)) + v38 ;end local function v24()local v42=0 -0 ;local v43;local v44;local v45;local v46;local v47;local v48;while true do if (v42==(2 -1)) then v45=1 + 0 ;v46=(v20(v44,1 + 0 ,12 + 8 ) * (2^(31 + 1))) + v43 ;v42=3 -(1 + 0) ;end if (v42==((0 + 0) -0)) then v43=v23();v44=v23();v42=3 -2 ;end if (v42==(4 -2)) then v47=v20(v44,34 -13 ,38 -7 );v48=((v20(v44,32)==((3307 -2108) -(867 + 267 + 64))) and  -(2 -(1924 -(469 + 1454)))) or (1 -0) ;v42=3 + 0 ;end if (v42==(1 + (1390 -(1361 + 27)))) then if (v47==(201 -(182 + 19))) then if (v46==(0 -0)) then return v48 * ((589 -(183 + 298)) -(58 + 50)) ;else local v97=718 -(208 + 510) ;while true do if (v97==(0 + 0)) then v47=1 -0 ;v45=0;break;end end end elseif (v47==2047) then return ((v46==(1873 -(308 + 1565))) and (v48 * (((1 + 0) -0)/(0 -0)))) or (v48 * NaN) ;end return v8(v48,v47-1023 ) * (v45 + (v46/((846 -(523 + 321))^(172 -120)))) ;end end end local function v25(v49)local v50;if  not v49 then v49=v23();if (v49==(0 -0)) then return "";end end v50=v3(v16,v18,(v18 + v49) -(1061 -(623 + 437)) );v18=v18 + v49 ;local v51={};for v68=448 -(360 + 87) , #v50 do v51[v68]=v2(v1(v3(v50,v68,v68)));end return v6(v51);end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v52=0 -0 ;local v53;local v54;local v55;local v56;local v57;local v58;local v59;local v60;while true do if (v52~=(7 -3)) then else while true do if (2~=v53) then else v58=nil;v59=nil;v53=5 -2 ;end if ((0 + 0)==v53) then v54=0 + 0 ;v55=nil;v53=1 + 0 ;end if (v53==(1 + 0)) then local v92=0;while true do if ((1 + 0)~=v92) then else v53=2 + 0 ;break;end if ((0 + 0)==v92) then v56=nil;v57=nil;v92=587 -(462 + 124) ;end end end if ((6 -3)~=v53) then else v60=nil;while true do local v98=0;while true do if (v98==(1 -0)) then if (v54==(0 -0)) then local v103=0 + 0 ;while true do if (v103~=(0 -0)) then else local v114=0;while true do if (v114==(2 -1)) then v103=1 + 0 ;break;end if (v114~=(0 + 0)) then else v55={};v56={};v114=1157 -(469 + 687) ;end end end if (2==v103) then v54=2 -1 ;break;end if (v103~=(1 + 0)) then else local v115=0 -0 ;while true do if (v115~=0) then else v57={};v58={v55,v56,nil,v57};v115=2 -1 ;end if (v115==(1 + 0)) then v103=6 -4 ;break;end end end end end break;end if (0==v98) then if (v54~=(402 -(96 + 305))) then else local v104=0 + 0 ;while true do if (v104==(4 -2)) then v54=808 -(642 + 164) ;break;end if ((1 + 0)==v104) then local v116=0;while true do if (v116==1) then v104=4 -2 ;break;end if (v116==(0 + 0)) then for v121=4 -3 ,v59 do local v122=0;local v123;local v124;while true do if (v122==(0 -0)) then local v153=0 + 0 ;while true do if ((402 -(310 + 91))==v153) then v122=1;break;end if ((0 -0)~=v153) then else v123=v21();v124=nil;v153=1 + 0 ;end end end if (1==v122) then if (v123==(880 -(80 + 799))) then v124=v21()~=(1544 -(103 + 1441)) ;elseif (v123==(2 -0)) then v124=v24();elseif (v123~=3) then else v124=v25();end v60[v121]=v124;break;end end end v58[1859 -(1398 + 458) ]=v21();v116=1;end end end if (v104==(0 + 0)) then local v117=1011 -(262 + 749) ;while true do if (v117~=(2 -1)) then else v104=2 -1 ;break;end if (v117==0) then v59=v23();v60={};v117=1;end end end end end if (v54~=(639 -(87 + 550))) then else for v106=1 -0 ,v23() do local v107=0 -0 ;local v108;local v109;while true do if (v107==0) then v108=0 + 0 ;v109=nil;v107=1;end if (v107==(146 -(62 + 83))) then while true do if (v108~=(1407 -(1246 + 161))) then else v109=v21();if (v20(v109,1,1)==(1488 -(1086 + 402))) then local v145=0 + 0 ;local v146;local v147;local v148;local v149;local v150;while true do if (v145==1) then v148=nil;v149=nil;v145=2 + 0 ;end if (v145~=(1155 -(773 + 382))) then else v146=0 -0 ;v147=nil;v145=1;end if (v145~=2) then else v150=nil;while true do if (v146==2) then while true do if (v147~=(0 + 0)) then else local v207=0;local v208;local v209;while true do if (v207==(1 -0)) then while true do if ((0 -0)~=v208) then else v209=926 -(461 + 465) ;while true do if (v209~=(1 -0)) then else v147=1 + 0 ;break;end if (v209==(0 + 0)) then local v231=646 -(630 + 16) ;local v232;while true do if (v231==0) then v232=0 + 0 ;while true do if (v232~=(1693 -(1518 + 174))) then else v209=2 -1 ;break;end if (v232==(0 + 0)) then local v235=215 -(185 + 30) ;while true do if (v235==(1 -0)) then v232=1;break;end if (v235==(0 -0)) then v148=v20(v109,6 -4 ,1585 -(522 + 1060) );v149=v20(v109,4,6);v235=1;end end end end break;end end end end break;end end break;end if (v207~=(0 + 0)) then else v208=1004 -(260 + 744) ;v209=nil;v207=1229 -(371 + 857) ;end end end if (v147~=(4 -2)) then else local v210=0 + 0 ;local v211;while true do if (v210==(1858 -(725 + 1133))) then v211=0 -0 ;while true do if (v211==1) then v147=2 + 1 ;break;end if (v211~=(1297 -(782 + 515))) then else if (v20(v149,240 -(231 + 8) ,606 -(468 + 137) )==(1585 -(906 + 678))) then v150[2 -0 ]=v60[v150[2 + 0 ]];end if (v20(v149,636 -(150 + 484) ,365 -(76 + 287) )==(4 -3)) then v150[7 -4 ]=v60[v150[3]];end v211=1;end end break;end end end if (v147~=(1 + 0)) then else local v212=0 -0 ;local v213;local v214;while true do if ((2 -1)==v212) then while true do if (v213~=0) then else v214=0;while true do if (v214==1) then v147=2;break;end if (v214~=0) then else local v233=0 -0 ;local v234;while true do if (v233==(0 -0)) then v234=0;while true do if (v234~=(1054 -(655 + 398))) then else v214=3 -2 ;break;end if (v234==(0 + 0)) then local v236=0;while true do if (v236==(0 + 0)) then v150={v22(),v22(),nil,nil};if (v148==0) then local v237=0;local v238;local v239;while true do if ((0 + 0)==v237) then v238=0;v239=nil;v237=1;end if (v237~=(1 + 0)) then else while true do if (v238==0) then v239=0 + 0 ;while true do if (v239==(1372 -(238 + 1134))) then v150[2 + 1 ]=v22();v150[5 -1 ]=v22();break;end end break;end end break;end end elseif (v148==(3 -2)) then v150[1112 -(603 + 506) ]=v23();elseif (v148==(1029 -(184 + 843))) then v150[3]=v23() -((1 + 1)^16) ;elseif (v148~=(354 -(229 + 122))) then else local v242=0 -0 ;local v243;while true do if (v242~=(0 + 0)) then else v243=0 + 0 ;while true do if (v243~=(0 -0)) then else v150[631 -(362 + 266) ]=v23() -(2^16) ;v150[4]=v22();break;end end break;end end end v236=1 + 0 ;end if (v236~=(1400 -(657 + 742))) then else v234=320 -(263 + 56) ;break;end end end end break;end end end end break;end end break;end if (v212==0) then v213=0;v214=nil;v212=1 + 0 ;end end end if (v147==(2 + 1)) then if (v20(v149,3 + 0 ,350 -(216 + 131) )==(1 -0)) then v150[1791 -(99 + 1688) ]=v60[v150[982 -(756 + 222) ]];end v55[v106]=v150;break;end end break;end if (v146~=(1 -0)) then else local v190=346 -(107 + 239) ;local v191;while true do if (v190==0) then v191=0 + 0 ;while true do if ((0 -0)==v191) then local v221=0 -0 ;while true do if (v221==(1464 -(122 + 1341))) then v191=1 + 0 ;break;end if ((0 -0)~=v221) then else v149=nil;v150=nil;v221=1 + 0 ;end end end if (v191~=(1 + 0)) then else v146=1812 -(990 + 820) ;break;end end break;end end end if (v146~=(457 -(77 + 380))) then else local v192=0 + 0 ;local v193;while true do if (v192==(0 -0)) then v193=367 -(321 + 46) ;while true do if ((1 + 0)==v193) then v146=717 -(212 + 504) ;break;end if (v193~=(0 + 0)) then else v147=0 + 0 ;v148=nil;v193=3 -2 ;end end break;end end end end break;end end end break;end end break;end end end for v110=1 + 0 ,v23() do v56[v110-1 ]=v28();end for v112=1,v23() do v57[v112]=v23();end return v58;end v98=1;end end end break;end end break;end if (v52==(850 -(203 + 647))) then v53=0 -0 ;v54=nil;v52=1;end if (v52==(2 + 1)) then v59=nil;v60=nil;v52=460 -(253 + 203) ;end if (v52==(1393 -(1140 + 251))) then v57=nil;v58=nil;v52=14 -11 ;end if (v52==(1 + 0)) then v55=nil;v56=nil;v52=1 + 1 ;end end end local function v29(v61,v62,v63)local v64=0;local v65;local v66;local v67;while true do if (v64==0) then v65=v61[1];v66=v61[2];v64=1;end if (v64==1) then v67=v61[3];return function(...)local v77=1;local v78= -1;local v79={...};local v80=v12("#",...) -1 ;local function v81()local v82=v65;local v83=v66;local v84=v67;local v85=v27;local v86={};local v87={};local v88={};for v93=1730 -(1034 + 696) ,v80 do if ((1702<=(2425 -(12 + 693))) and (v93>=v84)) then v86[v93-v84 ]=v79[v93 + (1 -0) ];else v88[v93]=v79[v93 + (918 -(583 + 334)) ];end end local v89=(v80-v84) + (883 -((2401 -(483 + 1266)) + 230)) ;local v90;local v91;while true do local v94=1671 -(46 + 1625) ;local v95;while true do if ((v94==(0 + 0)) or ((3168 -(1572 + 633))==(710 + 2953))) then v95=0;while true do if ((v95==(0 -0)) or (2657>(141 + 4237))) then local v105=0;while true do if ((v105==(1 + 0)) or ((7722 -5906)<=(546 -244))) then v95=1949 -((3998 -2876) + 826) ;break;end if (((5787 -(1136 + 343))>=(1670 -(286 + 155))) and (v105==(0 -0))) then v90=v82[v77];v91=v90[1];v105=1 + 0 ;end end end if (((4000 -(350 + 617))>=(434 -270)) and (v95==(4 -3))) then if ((v91<=10) or ((2995 -1944)==(2382 + (1048 -(594 + 398))))) then if (((4132 -(781 + 3 + 189))>=(261 -205)) and (v91<=(3 + 1))) then if ((v91<=(2 -1)) or ((422 + 235 + 328)>=(3414 -1474))) then if ((v91==(0 -(0 + 0))) or ((2888 -(328 + 1559))>(2511 -618))) then v88[v90[610 -(363 + 6 + 239) ]]=v88[v90[1 + 0 + 2 ]][v90[4]];else local v127=0 + 0 ;local v128;local v129;while true do if ((v127==(292 -(204 + 88))) or ((263 + 2693)>(5658 -945))) then v128=0 -0 ;v129=nil;v127=1 -0 ;end if ((v127==(3 -2)) or ((6158 -3615)<=156)) then while true do if ((((20596 -12108) -5637)>=(2133 -1415)) and (v128==(0 -0))) then v129=v90[1476 -(732 + 742) ];v88[v129]=v88[v129](v13(v88,v129 + (4 -3) ,v78));break;end end break;end end end elseif ((1409<=(8352 -(5233 -(798 + 483)))) and (v91<=2)) then local v130=0;local v131;local v132;local v133;local v134;local v135;local v136;while true do if ((v130==0) or ((1623 -1035)>1784)) then v131=(495 + 118) -(381 + 232) ;v132=nil;v130=1 -0 ;end if ((v130==2) or ((896 -632)>=3629)) then v135=nil;v136=nil;v130=(7 -4) + (580 -(494 + 86)) ;end if (((9896 -5410)>=(4669 -(471 + 403))) and (v130==(627 -(496 + 128)))) then while true do if ((v131==0) or ((4387 -1618)<(14 -11))) then v132=23 -(10 + 13) ;v133=nil;v131=1 + 0 ;end if ((4355<=4495) and (v131==(1 + 0))) then v134=nil;v135=nil;v131=963 -(52 + 909) ;end if ((v131==(1 + 1)) or ((3487 -(94 + 1104))>=(3407 + 550))) then v136=nil;while true do if (((2634 + 1693)>(11222 -7077)) and (v132==1)) then local v204=487 -(439 + 48) ;while true do if ((v204==(912 -(301 + 611))) or ((188 + 1272)<(109 + 332 + (110 -(12 + 89))))) then local v220=(0 + 0) -0 ;while true do if (((4409 -3240)>238) and (v220==(0 + 0))) then v78=(v135 + v133) -(1 + 0) ;v136=1861 -(191 + 1670) ;v220=(2 -1) + 0 ;end if ((1043==(2275 -1232)) and (v220==(1 + 0))) then v204=1 + 0 ;break;end end end if ((v204==1) or ((22861 -17880)<(6014 -(44 + 474 + 561)))) then v132=559 -(213 + 344) ;break;end end end if ((v132==(4 -2)) or ((2646 -1654)<=2)) then for v216=v133,v78 do local v217=0 + 0 ;while true do if (((221 -123)<=3983) and (v217==(1950 -(1728 + 222)))) then v136=v136 + 1 ;v88[v216]=v134[v136];break;end end end break;end if ((v132==0) or (((3693 -(1420 + 274)) + 2750)<=(3595 -1046))) then local v205=0 + 0 ;local v206;while true do if (((3619 -(6 + 246))==3367) and (v205==(0 + 0))) then v206=0 + 0 ;while true do if ((v206==(0 -0)) or ((3217 + 487)==1739)) then v133=v90[2 + 0 ];v134,v135=v85(v88[v133](v13(v88,v133 + 1 + (0 -0) ,v90[1 + 1 + 1 ])));v206=1;end if ((v206==(1 + (0 -0))) or ((98 + 206)==2517)) then v132=140 -(84 + 55) ;break;end end break;end end end end break;end end break;end if (((1633 -(5 + 513))<(5939 -((141 -98) + 943))) and (v130==(121 -(64 + 56)))) then v133=nil;v134=nil;v130=2 + 0 ;end end elseif ((v91>3) or (((1862 -(256 + 847)) + 1646)>(3966 -((1012 -617) + 79)))) then v88[v90[2 + 0 ]]=v29(v83[v90[10 -7 ]],nil,v63);else v88[v90[2]]=v63[v90[4 -1 ]];end elseif ((v91<=(17 -10)) or ((6853 -3033)<=(9020 -6470))) then if ((v91<=(11 -6)) or (((18847 -12149) -(1076 + 892))<=(2333 + 853))) then v88[v90[4 -2 ]]();elseif ((v91==(8 -2)) or ((145 + 502)>((6938 -3922) -((542 -(254 + 142)) + 85)))) then local v158=0;local v159;local v160;local v161;while true do if ((v158==(1690 -(1628 + 62))) or ((7877 -3407)<=(11715 -7509))) then local v182=1198 -(226 + 972) ;while true do if (((4535 -3397)>((208 + 2884) -2049)) and (v182==(1162 -(580 + 581)))) then v158=2 -1 ;break;end if (((2963 -(14 + (1273 -(528 + 657))))==(4224 -1363)) and (v182==(0 + 0))) then v159=0 -0 ;v160=nil;v182=412 -(131 + 227 + 53) ;end end end if ((v158==(1102 -(238 + (2792 -(264 + 1665))))) or ((1415 -459)>(1842 + 559 + 825))) then v161=nil;while true do if (((1044 + (1335 -1016))==1363) and (v159==(1484 -((1624 -(243 + 211)) + 314)))) then local v194=148 -(110 + 38) ;local v195;while true do if (((3125 + 424)>=(421 + 612)) and ((1959 -(237 + 1722))==v194)) then v195=0 + 0 ;while true do if ((v195==(0 -0)) or ((5318 -3339)>=(745 + 1264))) then v160=v90[3 -1 ];v161=v88[v90[1131 -(676 + 452) ]];v195=1 + 0 ;end if ((((1766 -(1341 + 312)) + 3520)==(4505 -(624 + 248))) and (v195==(2 -1))) then v159=660 -(407 + 92 + 160) ;break;end end break;end end end if (((16826 -12071)==(1040 + 3715)) and (((631 -(46 + 584)) + 0)==v159)) then v88[v160 + 1 ]=v161;v88[v160]=v161[v90[714 -(488 + 222) ]];break;end end break;end end else local v162=0;local v163;local v164;while true do if ((((783 + 196) -(25 + 508))<=((8282 -(451 + 101)) -3439)) and (v162==(1 -0))) then while true do if ((v163==0) or ((3459 + 1016)<(1062 + 87))) then v164=v90[3 -1 ];v88[v164](v13(v88,v164 + 1 ,v90[3]));break;end end break;end if ((v162==((0 -0) + 0)) or (922>=(4260 -(185 + 622)))) then v163=578 -(280 + 298) ;v164=nil;v162=840 -(587 + 252) ;end end end elseif ((v91<=(11 -3)) or ((2290 + 755)<(733 + 309))) then local v137=0;local v138;local v139;while true do if (((149 + 1896)<2122) and ((1 + 0 + 0)==v137)) then while true do if ((v138==(0 + 0)) or ((3759 -(149 + 175))<(1774 + 135))) then v139=v90[2];v88[v139]=v88[v139](v88[v139 + 1 + 0 + 0 ]);break;end end break;end if (((1929 + 2711)==(5387 -((1391 -(450 + 416)) + 222))) and (v137==(676 -(644 + 32)))) then v138=0 + 0 ;v139=nil;v137=920 -(407 + 512) ;end end elseif ((v91==((548 + 1096) -(627 + 1008))) or ((4589 -(1122 + 396))<=(697 + 2074))) then local v165=0;local v166;local v167;while true do if ((v165==(0 + 0)) or ((2738 -1121)>=((3966 + 5969) -6616))) then local v183=0 -0 ;while true do if (((5511 -(1073 + 348))<4953) and (v183==(701 -(459 + 242)))) then v166=0 + 0 ;v167=nil;v183=564 -(466 + 97) ;end if (((1495 + 222)<=(2402 + 516)) and (v183==((1506 -(469 + 1036)) + 0))) then v165=2 -1 ;break;end end end if ((v165==1) or ((5356 -(1238 + 48))<=(2624 -(608 + 437)))) then while true do if ((v166==((1402 -(1151 + 251)) -0)) or ((11567 -6905)<=918)) then v167=v90[2 -0 ];v88[v167]=v88[v167](v13(v88,v167 + 1 + 0 ,v90[14 -11 ]));break;end end break;end end else v88[v90[219 -(77 + 140) ]]=v90[3]~=(0 -0) ;end elseif ((v91<=(11 + (1675 -(735 + 935)))) or ((1247 + 1549 + 1160)>=(3327 + 1511))) then if ((v91<=(7 + 6)) or ((1478 + 907)<(24 + 2242))) then if ((1585==(2321 -736)) and (v91<=(1610 -(1257 + 342)))) then v88[v90[2]]=v90[1813 -(881 + 929) ];elseif (((12143 -8983)<(10065 -6351)) and (v91>(984 -(213 + 759)))) then v88[v90[1734 -(1293 + 439) ]][v90[3 + 0 ]]=v90[1623 -(204 + 1415) ];else local v171=0 -0 ;local v172;local v173;while true do if ((v171==(1 -0)) or (3102<=(1136 + (2604 -1243)))) then while true do if (((3759 -2414)<(444 + 2357)) and (v172==(0 -0))) then v173=v90[1 + 1 ];v88[v173]=v88[v173]();break;end end break;end if (((2805 -(260 + 1559))==(3156 -2170)) and (v171==(0 -0))) then local v184=0 -0 ;while true do if (((0 + 0)==v184) or (((1354 + 1261) -(920 + 121))<(673 -203))) then v172=0 + 0 ;v173=nil;v184=4 -3 ;end if ((1==v184) or (180>=(4857 -(201 + 265)))) then v171=(4 -2) -1 ;break;end end end end end elseif ((v91<=(1053 -((1988 -(1077 + 661)) + 789))) or ((2760 -1814)>((3599 -(258 + 631)) + 405))) then for v151=v90[2],v90[1497 -(1206 + 288) ] do v88[v151]=nil;end elseif (((495 -134)<=(687 + 396)) and (v91>15)) then v77=v90[11 -8 ];else v88[v90[(3036 -2117) -(408 + 509) ]]={};end elseif (((6728 -4925)<1914) and (v91<=19)) then if ((v91<=(1603 -(312 + 1274))) or ((3119 -1596)>=(11022 -6142))) then if ((v88[v90[1 + 1 ]]==v90[(2486 -(352 + 361)) -(1631 + 138) ]) or ((5865 -3663)==(2884 -(50 + 74)))) then v77=v77 + (1 -0) ;else v77=v90[3];end elseif ((v91>(17 + 1)) or ((3092 -((2360 -(473 + 1182)) + 869))<((1556 -(179 + 1217)) + 509))) then if ((v90[1297 -(993 + 200 + 102) ]==v88[v90[(426 -(204 + 145)) -(64 + 9) ]]) or ((17901 -13375)<(2184 -(287 + 85)))) then v77=v77 + (474 -(210 + 263)) ;else v77=v90[3];end else v88[v90[4 -2 ]]=v88[v90[1663 -(1092 + 568) ]];end elseif (((15 + 30)<(1384 + 2549)) and (v91<=(1154 -(780 + 354)))) then local v142=(0 -0) + 0 ;local v143;local v144;while true do if ((1380<(2177 + 1518)) and ((3 -2)==v142)) then while true do if (((14594 -11336)==(7804 -4546)) and (v143==(0 -0))) then v144=v90[2];v88[v144](v88[v144 + 1 + 0 ]);break;end end break;end if ((v142==0) or ((2753 -1876)>=(5583 -((2007 -(1616 + 141)) + 476)))) then v143=1005 -(145 + 860) ;v144=nil;v142=1173 -(932 + 240) ;end end elseif ((v91>(231 -(61 + 149))) or (3659>=(15794 -11095))) then do return;end else v88[v90[7 -5 ]][v90[829 -(570 + 91 + 165) ]]=v88[v90[196 -(166 + 26) ]];end v77=v77 + (2 -(1 + 0)) ;break;end end break;end end end end A,B=v27(v11(v81));if  not A[1] then local v96=v61[4][v77] or "?" ;error("Script error at ["   .. v96   .. "]:"   .. A[2] );else return v13(A,2,B);end end;end end end return v29(v28(),{},v17)(...);end vv9(),...);end
